-- Initial common-file-pkg.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                simple-archive-conduit
version:             0.1.0.0
synopsis:            Simple conduit-style inferface for reading several common archive file formats
-- description:         
license:             MIT
license-file:        LICENSE
author:              Gilbert Fine
maintainer:          gilbert.fine@gmail.com
-- copyright:           
category:            Codec
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

Flag bz
    Description:      Support bzip by libbz2
    Default:          True

Flag xz
    Description:      Support xz
    Default:          True

Flag dev
    Description:   Turn on development settings, like auto-reload templates.
    Default:       False

Flag prof
    Description:   Turn on profiling settings
    Default:       False

library
  exposed-modules:      Codec.Archive.Smooth.Types
                        Codec.Archive.Smooth.Zip
                        Codec.Archive.Smooth.Tar
                        Codec.Archive.Smooth.GZ
                        Codec.Archive.Smooth.Function
                        Codec.Archive.Smooth.All
  -- other-modules:       
  -- other-extensions:    
  build-depends:        base >=4.7 && <4.9
                      , bytestring
                      , conduit
                      , conduit-extra
                      , mtl
                      , resourcet
                      , primitive
                      , transformers-base
                      , transformers
                      , exceptions
                      , blaze-builder
                      , zip-archive
                      , tar-conduit

  if flag(bz)
    build-depends:      bzlib-conduit
    exposed-modules:    Codec.Archive.Smooth.BZ
    cpp-options:        -DHAVE_BZ

  if flag(xz)
    build-depends:      lzma-conduit
    exposed-modules:    Codec.Archive.Smooth.XZ
    cpp-options:        -DHAVE_XZ

  ghc-options:   	-Wall

  if flag(dev)
      cpp-options:   -DDEVELOPMENT
      ghc-options:   -O0
  else
      ghc-options:   -O

  if flag(prof)
      ghc-options:   -fprof-auto

  -- hs-source-dirs:      
  default-language:     Haskell2010

  default-extensions:   TypeFamilies
                        FlexibleContexts
                        OverloadedStrings
                        MultiParamTypeClasses
                        FlexibleInstances
                        ExistentialQuantification

executable test-file
  main-is:        test-file.hs
  build-depends:    base
                  , simple-archive-conduit
                  , bytestring
                  , mtl
                  , transformers
                  , time
                  , filepath
                  , directory
                  , conduit
                  , conduit-extra
                  , resourcet
                  , primitive
                  , transformers-base
                  , exceptions
                  , blaze-builder
                  , zip-archive
                  , tar-conduit

  if flag(bz)
    build-depends:      bzlib-conduit
    cpp-options:        -DHAVE_BZ

  if flag(xz)
    build-depends:      lzma-conduit
    cpp-options:        -DHAVE_XZ

  default-extensions:   TypeFamilies
                        FlexibleContexts
                        OverloadedStrings
                        MultiParamTypeClasses
                        FlexibleInstances
                        ExistentialQuantification

  ghc-options: -Wall -fno-warn-unused-imports
  default-language:     Haskell2010
